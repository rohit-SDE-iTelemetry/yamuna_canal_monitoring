import os
import time
import json
import random
import logging
import sys
import django
from datetime import datetime

sys.path.append('/home/rohit/Desktop/eyc/yamuna_canal_monitoring/yamuna_canal_monitoring')
from box import setting_type
_ = setting_type()
os.environ.setdefault("DJANGO_SETTINGS_MODULE", _.get('settings'))
sys.path.append(_.get('path'))
sys.path.append(_.get('env'))
django.setup()

from yamuna_canal_monitoring.GLOBALS import RAW_FILES_DESTINATION, TDAY,\
    CURRENT_DATE_BASE, LOG_DT_FORMAT

logging.basicConfig(filename='/home/rohit/Desktop/eyc/yamuna_canal_monitoring/yamuna_canal_monitoring/autogenerated_raw_files/raw-file-generater.log', filemode='a', format=LOG_DT_FORMAT)
log = logging.getLogger()
log.setLevel(logging.INFO)

try:
    os.mkdir(CURRENT_DATE_BASE)
    log.info('raw file folder created for date : %s' % datetime.now().strftime('%d%b%Y'))
except Exception as err:
    log.exception('Error : %s' % err)
    pass
    
site_array = [{'demo001':'demo001'}]
station_array = ['demo001']
param_array = ['battery','waterLevel','flowRate','gateOpening','velocity']

'''
raw json data format : {
                        'station_id':'xxxxxx',
                        'prefix':'xxxxxx',
                        'timestamp':1663922661,
                        'data':{'battery':{'value':xx,'unit':xx},
                                'waterLevel':{'value':xx,'unit':xx},
                                'flowRate':{'value':xx,'unit':xx},
                                'gateOpening':{'value':xx,'unit':xx},
                                'velocity':{'value':xx,'unit':xx}
                                }
                        }
'''
'''
generate random values for params values
'''
def get_random_value(param):
    if(param == 'battery'):
        value = random.uniform(10.5, 45.5)
        return round(value,2),'v'
    elif(param == 'waterLevel'):
        value = random.uniform(0.01, 4)
        return round(value,2),'m'
    elif(param == 'flowRate'):
        value = random.uniform(0.01, 5.00)
        return round(value,2),'m3/s'
    elif(param == 'gateOpening'):
        value = random.uniform(0.01, 100)
        return round(value,2),'mm'
    elif(param == 'velocity'):
        value = random.uniform(3, 10)
        return round(value,2),'m/s'

'''
generate raw json formatted files
'''
def generate_files():
    json_array = {}
    station_id = station_array[int(random.uniform(0, len(station_array)))]
    unix_ts = int(time.time())
    json_array['station_id'] = station_id
    json_array['prefix'] = station_id
    json_array['timestamp'] = unix_ts
    param_json = {}
    for i in param_array:
        random_val = get_random_value(i)
        param_json[i] = {'value':random_val[0],'unit':random_val[1]}
    json_array['data'] = param_json

    print('json_array >>>> ',json_array,)
    # Writing to a .json file
    with open(f"{CURRENT_DATE_BASE}/{station_id}_{unix_ts}.json", "w") as jsonFile:
        jsonFile.write(json.dumps(json_array))
        log.info('%s data : %s' % (station_id,json.dumps(json_array)))

    # Todo : Writing to a .csv file

'''
function call for generating raw json files
'''
i = 1
n = 100
while i <= n:
    time.sleep(0.25)
    generate_files()
    i = i+1  


